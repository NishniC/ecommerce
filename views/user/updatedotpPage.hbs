<style>
    body {
        margin-top: 20px;
        color: #1a202c;
        text-align: left;
        background-color: #e2e8f0;
    }

    .main-body {
        padding: 15px;
    }

    .card {
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px 0 rgba(0, 0, 0, .06);
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid rgba(0, 0, 0, .125);
        border-radius: .25rem;
    }

    .card-body {
        flex: 1 1 auto;
        min-height: 1px;
        padding: 1rem;
    }

    .gutters-sm {
        margin-right: -8px;
        margin-left: -8px;
    }

    .gutters-sm>.col,
    .gutters-sm>[class*=col-] {
        padding-right: 8px;
        padding-left: 8px;
    }

    .mb-3,
    .my-3 {
        margin-bottom: 1rem!important;
    }

    .bg-gray-300 {
        background-color: #e2e8f0;
    }

    .h-100 {
        height: 100%!important;
    }

    .shadow-none {
        box-shadow: none!important;
    }

    /* Style for list items (buttons) */
    .list-group-item {
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .list-group-item:hover,
    .list-group-item.active {
        background-color: #e0e0e0;
    }

    /* Remove default list styling */
    .list-group-item {
        border: none;
        border-radius: 0;
    }
</style>


<div class="container">
    <div class="main-body">
    

    
          <div class="row gutters-sm">
            <div class="col-md-4 mb-3">
              <div class="card">
                <div class="card-body">
                  <div class="d-flex flex-column align-items-center text-center">
                    <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Admin" class="rounded-circle" width="150">
                    <div class="mt-3">
                      <h5>Hello, </h5>
                      <h4>{{user.firstName}} {{user.lastName}}</h4>

                    </div>
                  </div>
                </div>
              </div>
             
<div class="card mt-3">
  <ul class="list-group list-group-flush">
    <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap" id="accountOverview">
      <h6 type="btn">Account Overview</h6>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap" id="myOrders">
      <h6 type="btn">My Orders</h6>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap" id="myWishList">
      <h6 type="btn">My Wish List</h6>
    </li>
    <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap" id="myWishList">
      <h6 type="btn">Manage address</h6>
    </li>
  </ul>
</div>
 </div>
            <div class="col-md-8">
              <div class="card mb-3">
                <div class="card-body">
   <section class="h-100" style="background-color: #f6f3f9;">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col">
                    <div class="card card-registration my-4">
                        <div class="card-body p-md-5 text-black">
                            <h3 class="mb-5 text-uppercase" style="color: #b382f5;">Verify OTP</h3>

                            <div id="flash-messages" class="container">
                                <!-- Display error or success messages here -->
                                {{#if messages.error}}
                                    <div class="alert alert-danger">{{messages.error}}</div>
                                {{/if}}
                                {{#if messages.success}}
                                    <div class="alert alert-success">{{messages.success}}</div>
                                {{/if}}
                            </div>

                            <form id="otp-form">
                                <div class="form-outline mb-4">
                                    <input type="text" id="otp" name="otp" class="form-control form-control-lg" placeholder="Enter OTP" style="border-color: #b382f5;" />
                                    <div class="otp error" style="color: red;"></div>
                                </div>
                                <input type="text" name="userId" id="userId" value="{{data.newEmail.existingUser._id}}" hidden>
                                <input type="text" name="newEmail" id="newEmail" value="{{data.newEmail.newEmail}}" hidden>
                                <input type="text" name="newOTP" id="newOTP" value="{{data.newEmail.newOTP}}" hidden>

                                <!-- Display the remaining time -->
                                <div id="timer" class="mb-4"></div>

                                <div class="d-flex justify-content-end pt-3">
                                    <button type="submit" class="btn btn-lg ms-2" style="background-color: #b382f5;">Verify OTP</button>
                                    <button type="button" id="resend-btn" class="btn btn-lg ms-2" style="background-color: #b382f5;" disabled>Resend OTP</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
                </div>
              </div>




            </div>
          </div>

        </div>
    </div>


    <script>
  // Get the current page or section from your application
  const currentPage = "accountOverview"; // Replace with your actual logic

  // Highlight the current page by changing the background color
  document.getElementById(currentPage).style.backgroundColor = "#BB84E8"; // Change the color as needed
    document.addEventListener('DOMContentLoaded', (event) => {
        const form = document.getElementById('otp-form');
        const otpError = document.querySelector('.otp.error');
        const resendBtn = document.getElementById('resend-btn');
        const timerElement = document.getElementById('timer');

        // Set a timer for 2 minutes (2 * 60 * 1000 milliseconds)
        let timer = 1 * 60 * 1000;

        // Declare the interval variable in the outer scope
        let interval;

        // Function to update the timer
        function updateTimer() {
            const minutes = Math.floor(timer / (60 * 1000));
            const seconds = Math.floor((timer % (60 * 1000)) / 1000);
            timerElement.textContent = `Remaining Time: ${minutes}:${seconds}`;
            timer -= 1000;

            if (timer < 0) {
                // Enable the resend button after 2 minutes
                timerElement.textContent = 'Resend OTP';
                resendBtn.disabled = false;
                clearInterval(interval);
            }
        }

        // Start the timer
        interval = setInterval(updateTimer, 1000);

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
           

            try {
                const formData = new FormData(form);
                const formDataObject = {};
                formData.forEach((value, key) => {
                    formDataObject[key] = value;
                });

                const headers = {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                };
                console.log(formDataObject)
                const res = await fetch("/user/verify-newotp", {
                    method: "POST",
                    body: JSON.stringify(formDataObject),
                    headers: headers,
                });

                const data = await res.json();

                if (data.errors) {
                    otpError.textContent = data.errors.otp;
                }

                if (data.message) {
                    // Redirect if a message is received
                    location.assign('/user/forlogout');
                }
            } catch (err) {
                console.log(err);
            }
        });

        // Resend button click event
        resendBtn.addEventListener('click', async () => {
            try {
                const res = await fetch("/resend-otp", {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' }
                });
                const data = await res.json();

                if (data.errors) {
                    console.error("Resend OTP error:", data.errors.general);
                }

                if (data.message) {
                    console.log(data.message);
                    // Disable the resend button
                    resendBtn.disabled = true;

                    // Reset the timer
                    timer = 1 * 60 * 1000;

                    // Start the timer again
                    interval = setInterval(updateTimer, 1000);
                }
            } catch (err) {
                console.log(err);
            }
        });
    });

</script>
